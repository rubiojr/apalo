#!/usr/bin/ruby
require 'rubygems'
require 'optiflag'
require 'term/ansicolor'
require 'apalotk'
include ApaloTk::Core
include ApaloTk::Analyzers

module Executable extend OptiFlagSet
  extended_help_flag "h","help","?"
  and_process!
end
  
class Color
  class << self
    include Term::ANSIColor
  end
end

def usage
  STDERR.puts "Usage: #{File.basename($0)} <options> <logfile>"
end

logfile = ARGV.last
if logfile.nil? or not File.exist?(logfile)
  STDERR.puts "Invalid logfile"
  usage
  exit 1
end

log = Log.new(logfile)

#
# Use the BasicAnalyzer
# 
ba = BasicAnalyzer.new
tstart = Time.now
errors = log.analyze(ba)
tend = Time.now - tstart
ba.print(BasicAnalyzerSimpleView.new)

#
# Output some stats
#
puts
puts Color.bold("Processed lines: ") + "#{log.processed_lines}"
puts Color.bold("Errors:          ") + "#{log.errors}"
puts Color.bold("Analisys time:   ") + "#{tend} secs."
