#!/usr/bin/ruby
require 'rubygems'
require 'optiflag'
require 'term/ansicolor'
require 'apalotk'

module Executable extend OptiFlagSet
  flag 'logfile',   :description => 'Log file to analyze'
  extended_help_flag "h","help","?"
  optional_flag 'logformat',   :description => 'Log file format'
  and_process!
end
  
class Color
  class << self
    include Term::ANSIColor
  end
end

include ApaloTk::Core
include ApaloTk::Analyzers
# init the log parser
cl = case ARGV.flags.logformat
  when nil: CombinedLog.new(ARGV.flags.logfile)
  when "combined": CombinedLog.new(ARGV.flags.logfile)
  when "combinedv": CombinedLogVhost.new(ARGV.flags.logfile)
  else nil
end

if cl.nil?
  STDERR.puts "Invalid log format specified. Choose either combined or combinedv"
  exit 1
end

#
# Use the BasicAnalyzer
# 
ba = BasicAnalyzer.new
tstart = Time.now
errors = cl.analyze(ba)
tend = Time.now - tstart
ba.print(BasicAnalyzerSimpleView.new)

#
# Output some stats
#
puts
puts Color.bold("Processed lines: ") + "#{cl.processed_lines}"
puts Color.bold("Errors:          ") + "#{cl.errors}"
puts Color.bold("Analisys time:   ") + "#{tend} secs."
